/*
 * QCCommandButtonPanel.java
 *
 * Created on July 13, 2000, 3:52 PM
 *
 * This is free open source software distributed under the IBM Public License found
 * on the World Wide Web at http://oss.software.ibm.com/developerworks/opensource/license10.html
 * Copyright *C* 2000, Jack J. Woehr, PO Box 51, Golden, CO 80402-0051 USA jax@well.com
 * Copyright *C* 2000, International Business Machines Corporation and others. All Rights Reserved.
 */

package com.SoftWoehr.JTOpenContrib.QCDemo;

/** A panel to continually reinstance the CommandCallButton since one can't
 * effectively change servers once setServer() has been called.
 * @author jax
 * @version 1.0
 */
public class QCCommandButtonPanel extends javax.swing.JPanel {

  /** Creates new form QCCommandButtonPanel
   */
  public QCCommandButtonPanel() {
    initComponents ();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the FormEditor.
   */
  private void initComponents () {//GEN-BEGIN:initComponents
    commandCallButton1 = new com.ibm.as400.vaccess.CommandCallButton ();
    setLayout (new java.awt.BorderLayout ());

    commandCallButton1.setText ("Run a Command");


    add (commandCallButton1, java.awt.BorderLayout.CENTER);

  }//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private com.ibm.as400.vaccess.CommandCallButton commandCallButton1;
  // End of variables declaration//GEN-END:variables

  /** Returns the CommandCallButton instance currently active in this panel.
   * @return The current CommandCallButton which is reinstanced
   * every time the server is changed, since you can't
   * effectively setServer() more than once.
   */
  public com.ibm.as400.vaccess.CommandCallButton getButton() {
    return commandCallButton1;
  }
  /** Reinstance the CommandCallButton because that object can't have setServer()
   * called on it multiple times per design.
   * @param text The label for the button.
   */
  public synchronized void renew(String text) {
    remove(commandCallButton1);
    commandCallButton1 = new com.ibm.as400.vaccess.CommandCallButton ();
    commandCallButton1.setText (text);
    add (commandCallButton1, java.awt.BorderLayout.CENTER);
  }
}
