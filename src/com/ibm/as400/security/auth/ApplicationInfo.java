package com.ibm.as400.security.auth;

import com.ibm.eim.*;

/**
 Contains an application's EIM ID and Application Instance ID.
 This class is instantiated by {@link IdentityDomain#getApplicationInfo(String,int) getApplicationInfo}.
<p><b>Usage Notes</b>
<p>Before calling this method, the system administrator must have used EIM APIs
to set up EIM information.  The administrator must have performed the following
steps:
<ol>
<li>Used <tt>com.ibm.eim.Domain.eimEid()</tt> to add an EIM identifier.
For example, the administrator may want to add one EIM
identifier that represents the iSeries Base Operating System.
</li>
<li>Used <tt>com.ibm.eim.Eid.addAlias()</tt> to add an alias name to the EIM identifier.
The alias name would be generated by
concatenating the ITKN_ESERVERID value (__IBM_DEFINED__:eServerID=)
with the host name, which can be obtained using <tt>com.ibm.eim.Domain.getHost()</tt>.
</li>
<li>Used <tt>com.ibm.eim.Eid.addAdditionalInfo()</tt> to add additional information
to the EIM identifier.
The additional information should be a string of the format "PORT=nn:applicationinstanceID" (without the quotes).
</li>
</ol>
Note: The application is not required to 'register' their port under the EIM Identifier.
If {@link IdentityDomain#getApplicationInfo(String,int) getApplicationInfo} doesn't find the application instance identifier, it sets the ApplicationInstanceID field to <tt>null</tt>.
</p>
 **/
public final class ApplicationInfo {

  private Eid appEimID_; // application EIM ID
  // Implementation note: Eid is not serializable.

  private String appInstanceID_; // application instance ID


  ApplicationInfo(Eid appEimID, String appInstanceID)
  {
    // Assume caller has validated args.
    appEimID_ = appEimID;
    appInstanceID_ = appInstanceID;
  }


  /**
   Returns the EIM identifier that represents the application.
   @return The application EIM identifier.
   **/
  public Eid getEimID()
  {
    return appEimID_;
  }


  /**
   Returns the application instance identifier that uniquely identifies the instance of the application.  Returns <tt>null</tt> if the application instance identifier hasn't been determined.
   @return The application instance ID.
   **/
  public String getApplicationInstanceID()
  {
    return appInstanceID_;
  }


  /**
   Sets the application instance identifier that uniquely identifies the instance of the application.
   @param appInstanceID The application instance ID.
   **/
  public void setApplicationInstanceID(String appInstanceID)
  {
    if (appInstanceID == null) throw new NullPointerException("appInstanceID");
    appInstanceID_ = appInstanceID;
  }

}
